一：redis 持久化

1)：快照模式   Snapshotting   （默认）
触发格式
save  秒数   键值数
save 900 1 #900 秒内如果超过 1 个 key 被修改，则发起快照保存
save 300 10 #300 秒内容如超过 10 个 key 被修改，则发起快照保存
save 60 10000

快照保存过程:
1.redis 调用 fork,现在有了子进程和父进程。
2. 父进程继续处理 client 请求，子进程负责将内存内容写入到临时文件。由于 os 的实时复
制机制（copy on write)父子进程会共享相同的物理页面，当父进程处理写请求时 os 会为父
进程要修改的页面创建副本，而不是写共享的页面。所以子进程地址空间内的数据是 fork
时刻整个数据库的一个快照。
3.当子进程将快照写入临时文件完毕后，用临时文件替换原来的快照文件，然后子进程退出。

client 也可以使用 save 或者 bgsave 命令通知 redis 做一次快照持久化。save 操作是在主线程
中保存快照的，由于 redis 是用一个主线程来处理所有 client 的请求，这种方式会阻塞所有
client 请求。所以不推荐使用。
另一点需要注意的是，每次快照持久化都是将内存数据完整
写入到磁盘一次，并不是增量的只同步变更数据。如果数据量大的话，而且写操作比较多，
必然会引起大量的磁盘 io 操作，可能会严重影响性能。

2)：aof模式   appendonly yes //启用 aof 持久化方式   默认关闭

appendonly yes //启用 aof 持久化方式
# appendfsync always //收到写命令就立即写入磁盘，最慢，但是保证完全的持久化
appendfsync everysec //每秒钟写入磁盘一次，在性能和持久化方面做了很好的折中
# appendfsync no //完全依赖 os，性能最好,依赖系统磁盘 速度最快

dbfilename          #文件路径

aof过程：
1、redis 调用 fork ，现在有父子两个进程
2、子进程根据内存中的数据库快照，往临时文件中写入重建数据库状态的命令
3、父进程继续处理 client 请求，除了把写命令写入到原来的 aof 文件中。同时把收到的写命
令缓存起来。这样就能保证如果子进程重写失败的话并不会出问题。
4、当子进程把快照内容写入已命令方式写到临时文件中后，子进程发信号通知父进程。然
后父进程把缓存的写命令也写入到临时文件。
5、现在父进程可以使用临时文件替换老的 aof 文件，并重命名，后面收到的写命令也开始
往新的 aof 文件中追加。
需要注意到是重写 aof 文件的操作，并没有读取旧的 aof 文件，而是将整个内存中的数据库
内容用命令的方式重写了一个新的 aof 文件,这点和快照有点类似。



二：redis主从  *redis主从和mysql主从不一样，redis主从不用事先同步数据，它会自动同步过去

从服务器配置    
slaveof   <ip>  	<port>		#指定 master 的 ip 和端口
masterauth 	<密码>


三：Redis 哨兵模式 （Redis sentinel）
Sentinel是一个管理多个Redis实例的工具，它可以实现对Redis的主节点存活检测、主从运行情况检测、自动故障转移（failover）、主从切换。
Redis的Sentinel最小配置是一主一从
	监控
		Sentinel会不断的检查主服务器和从服务器是否正常运行。

	通知
		当被监控的某个Redis服务器出现问题，Sentinel通过API脚本向管理员或者其他的应用程序发送通知。

	自动故障转移
		当主节点不能正常工作时，Sentinel会开始一次自动的故障转移操作，
		它会将与失效主节点是主从关系的其中一个从节点升级为新的主节点， 并且将其他的从节点指向新的主节点。

	配置提供者
		在Redis Sentinel模式下，客户端应用在初始化时连接的是Sentinel节点集合，从中获取主节点的信息。



*相关概念
主观失效
	SDOWN（subjectively down）,直接翻译的为”主观”失效,即当前sentinel实例认为某个redis服务为”不可用”状态.

客观失效
	ODOWN（objectively down）,直接翻译为”客观”失效,即多个sentinel实例都认为master处于”SDOWN”状态,
	那么此时master将处于ODOWN,ODOWN可以简单理解为master已经被集群确定为”不可用”,将会开启failover








redis集群配置
https://redis.io/topics/cluster-tutorial


其他：

error_log  
redis Can't save in background: fork: Cannot allocate memory详解
修改/etc/sysctl.conf文件：
vim /etc/sysctl.conf

vm.overcommit_memory = 1
sysctl -p

info memory
info stats




