user root;
worker_processes auto;
error_log  /var/log/nginx/nginx_error.log  crit;
pid /var/run/nginx.pid;

worker_rlimit_nofile 51200;

events
    {
        use epoll;
        worker_connections 51200;
        multi_accept on;
    }

http
    {
        include       mime.types;
        default_type  application/octet-stream;
        server_names_hash_bucket_size 128;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 50m;

        sendfile   on;
        tcp_nopush on;

        keepalive_timeout 60;

        tcp_nodelay on;

        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 256k;

        #创建缓存的时候可能生成一些临时文件存放的位置
        proxy_temp_path   /tmp/temp;
        #设置Web缓存区名称为cache_one,内存缓存空间大小为200M,缓存的数据超过1天没有被访问就自动清除;访问的缓存数据,硬盘	   缓存空间大小为5G
        proxy_cache_path  /tmp/cache  levels=1:2   keys_zone=cache_one:200m inactive=1d max_size=5g;
        proxy_headers_hash_max_size 51200;
        proxy_headers_hash_bucket_size 6400;
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 32 128k;
        proxy_busy_buffers_size 128k;
        proxy_temp_file_write_size 128k;
        add_header cachestatus $upstream_cache_status;   #添加本条可以在浏览器中看到是否命中缓存

        gzip on;
        gzip_min_length  1k;
        gzip_buffers     4 16k;
        gzip_http_version 1.1;
        gzip_comp_level 2;
        gzip_types     text/plain application/x-javascript text/css application/xml application/json application/javascript application/x-www-form-urlencoded ;
        gzip_vary on;
        gzip_proxied   expired no-cache no-store private auth;
        gzip_disable   "MSIE [1-6]\.";

        #limit_conn_zone $binary_remote_addr zone=perip:10m;
        ##If enable limit_conn_zone,add "limit_conn perip 10;" to server section.

        server_tokens off;
        access_log on;

       log_format main '{"@timestamp":"$time_iso8601",'
          '"@source":"$server_addr",'
          '"clientip":"$remote_addr",'
          '"remote_user":"$remote_user", '
          '"hostname":"$server_name",'
          '"request":"$request",'
          '"request_method":"$request_method",'
          '"requestbody":"$request_body",'
          '"status":"$status",'
          '"upstream_status":"$upstream_status",'
          '"api_path":"$uri",'
          '"size":$body_bytes_sent,'
          '"referer":"$http_referer",'
          '"agent":"$http_user_agent",'
          '"x_forwarded_for":"$http_x_forwarded_for",'
          '"upstream_addr":"$upstream_addr",'
          '"responsetime":$request_time,'
          '"upstream_response_time":"$upstream_response_time"}';
 
       log_format logstash_json '{"@timestamp":"$time_iso8601",'
        '"@source":"$server_addr",'
        '"head_versioncode":"$http_versioncode",'
        '"head_watermark":"$http_watermark",'
        '"head_platform":"$http_platform",'
        '"head_channel":"$http_channel",'
        '"clientip":"$remote_addr",'
        '"remote_user":"$remote_user", '
        '"hostname":"$http_host",'
        '"request":"$request",'
        '"request_method":"$request_method",'
        '"requestbody":"$request_body",'
        '"status":"$status",'
        '"upstream_status":"$upstream_status",'
        '"api_path":"$uri",'
        '"size":$body_bytes_sent,'
        '"referer":"$http_referer",'
        '"agent":"$http_user_agent",'
        '"x_forwarded_for":"$http_x_forwarded_for",'
        '"upstream_addr":"$upstream_addr",'
        '"responsetime":$request_time,'
        '"upstream_response_time":"$upstream_response_time"}';
#limit_req_zone $request_body zone=one:1m rate=3r/m;
#    limit_conn_zone $binary_remote_addr zone=api2_goods_ip_conn:15m;

# 禁止IP访问
server {
    listen 80 default;
    server_name _;
    return 404;
}


# server {
# 	  listen 80;
# 	  server_name  ${realmName};
#       root /usr/share/nginx/html;
#       index index.html;
# 	  rewrite ^(.*)$ https://${realmName}$1 permanent;
# }


server {
    listen 80;
    listen 443 ssl;
    server_name  ${realmName};
    root /usr/share/nginx/html;
    index index.html;
    add_header X-Frame-Options SAMEORIGIN;
    #include back_ip.conf;
    #ssl_session_tickets on;
    ssl on;
    ssl_certificate 1_xxx.com_bundle.crt;
    ssl_certificate_key 2_xxx.com.key;

    location = /favicon.ico {
      log_not_found off;
      access_log off;
    }
    location / {
       try_files $uri $uri/ /index.html;
    }
    location ~ .*\.(gif|jpg|png|css|js|ico)$ {
       expires 30m;
    }

    access_log  /var/log/nginx/access_${realmName}.log logstash_json;
    error_log /var/log/nginx/error_${realmName}.log;
}

}
