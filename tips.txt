移动光标
Ctrl + b =	←		Ctrl + f = →
Ctrl+Left-Arrow	Ctrl+Right-Arrow
Ctrl + a	Ctrl + e

删除
Ctrl + d  = delete 		Ctrl + h = backspace
Ctrl + w	ECS + d
Ctrl + u 	Ctrl + k		
Ctrl + y  恢复

历史命令
Ctrl + p  =  ↑			Ctrl + n = ↓      
Ctrl + r   搜索 history
Ctrl + I    =    TAB补全


Ctrl + t 将光标位置的字符和前一个字符进行位置交换

network
nmcli - command-line tool for controlling NetworkManager
mii-tool - view, manipulate media-independent interface status
ethtool - query or control network driver and hardware settings
mtr

查看当前IP个数和每IP连接数： 
netstat -an | grep 80 | awk '{print $5}' | awk 'BEGIN {FS=":"} NF==2 {print $1} NF==5 {print $4}' | sort | uniq -c | sort -n

只查看该进程：ps -ef | grep 11345
查看该进程打开的文件：lsof -p 11345
查看内存分配：lcat /proc/11345/maps
查看堆栈：pstack 11345
查看发出的系统调用:strace -p 11345
查看调用库函数:ltrace -p 11345

/etc/profile:此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行.并从/etc/profile.d目录的配置文件中搜集shell的设置.

/etc/bashrc:为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.

~/.bash_profile:每个用户都可使用该文件输入专用于自己使用的shell信息,
当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件.

~/.bashrc:该文件包含专用于你的bash shell的bash信息,~/.bashrc只对当前用户新打开的bash生效。
当登录时以及每次打开新的shell时,该文件被读取.（每个用户都有一个.bashrc文件，在用户目录下）

~/.bash_logout:当每次退出系统(退出bash shell)时,执行该文件. 

/etc/profile中设定的变量(全局)的可以作用于任何用户,而~/.bashrc等中设定的变量(局部)只能继承/etc/profile中的变量,他们是"父子"关系.

~/.bash_profile 是交互式、login 方式进入bash 运行的；
~/.bashrc 是交互式 non-login 方式进入bash 运行的；
通常二者设置大致相同，所以通常前者会调用后者。

.zhrc 当用户使用 zshell，就会在/home/userName/目录下 产生 .zshrc 配置文件 可以通过修改这个文件配置环境变量。

cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime    #change time


# 单引号，双引号，反引号
1.单引号 (' ') 单引号，不具有变量置换的功能，即单引号会告诉shell忽略所有的特殊字符

2.双引号(" ") 双引号，具有变量置换的功能，即双引号之要求忽略大多数特殊字符，除了$（使用变量前导符）, (转义符), `(反向引号)。


3.反向引号( ): 命令替换与变量替换差不多，都是用来重组命令行的，先完成引号里的命令行，然后将其结果替换出来，再重组成新的命令行。
（相当于$(...)） 
$( )与｀｀的区别，在操作上，这两者都是达到相应的效果，但是建议使用$( )：
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 20    #生成20个随机字符


nginx 性能监控

network

iftop -i eth1 -n -P

nmcli - command-line tool for controlling NetworkManager
mii-tool - view, manipulate media-independent interface status
ethtool - query or control network driver and hardware settings

查看当前IP个数和每IP连接数： 
netstat -an | grep 80 | awk '{print $5}' | awk 'BEGIN {FS=":"} NF==2 {print $1} NF==5 {print $4}' | sort | uniq -c | sort -n

ifconfig
ifstat
watch cat /proc/net/dev

sar
			
统计节点数文件
for i in 路径 ;do echo $i;find $i |wc -l;done


磁盘读写进程监控
pidstat -d 1

